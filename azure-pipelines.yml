trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

stages:
# Development Stage
- stage: Dev
  jobs:
  - job: DeployToDev
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
      displayName: 'Publish the application'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive published files'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure subscription 1(41a8d72c-b0d9-45ef-b78c-12163a697ed0)'
        appType: 'webAppLinux'
        appName: 'assets-manager-api-dev'
        package: '$(Build.ArtifactStagingDirectory)/*.zip'
      displayName: 'Deploy to Development environment'

# Production Stage with Approval
- stage: Prod
  dependsOn: Dev
  condition: succeeded()
  jobs:
  - deployment: DeployToProd
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription 1(41a8d72c-b0d9-45ef-b78c-12163a697ed0)'
              appType: 'webAppLinux'
              appName: 'assets-manager-api'
              package: '$(Build.ArtifactStagingDirectory)/*.zip'
            displayName: 'Deploy to Production environment'
